#!/bin/sh

ACTION=$1

if [ -z $ACTION ]; then
	echo Usage: $0 action
	echo
	echo Available actions:
	echo
	echo bootstrap - create new bootstrap.js file
	echo theme - recompile the theme from sass files
	echo deploy - compile a new deployable version of the app
	echo
	exit
fi

SENCHA=../SenchaCmd/sencha

if [ "$ACTION" = "bootstrap" ]; then
	$SENCHA compile -classpath=../extjs/src,public/app meta -alias -out public/bootstrap.js and meta -alt -append -out public/bootstrap.js

elif [ "$ACTION" = "theme" ]; then
        #create css files from sass
	$SENCHA compass compile public/sass public/sass/ext-all-spelled.scss

	#fix path to images in the generated css file
	sed -i 's/..\/..\/..\/extjs\/resources\/themes\/images\/spelled\//..\/images\/spelled\//' public/css/ext-all-spelled.css

	#slice fallback images for older browsers
#	PATH=${PATH} sencha slice theme -d ../extjs -c ./public/css/ext-all-spelled.css -o ./public/images/spelled -v
#	cp -aR public/images/spelled-patches/* public/images/spelled/

elif [ "$ACTION" = "deploy" ]; then
	# cleaning up and creating directory tree
        rm -rf build
        mkdir build

        # populating output with static content
        cp -R public/css public/images build
        cp -RL public/libs build
        cp ../../node_modules/requirejs/require.js build/libs
        cp ../../node_modules/underscore/underscore.js build/libs
        cp -R ../ace/lib/ace build/libs

        # creating the javascript include
        $SENCHA -debug compile -classpath=../extjs/src,public/app \
page -yui -in=public/index.html -out=build/index.html

fi
